[{"/Users/vascooliveira/code/volivers/react-moma-dashboard/src/App.jsx":"1","/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/common/Utils.jsx":"2","/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/counters/ImplementedArtworks.jsx":"3","/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/ArtworksTable.jsx":"4","/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/Timeline.jsx":"5","/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/counters/TotalArtworks.jsx":"6","/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/common/Footer.jsx":"7","/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/common/SideDrawer.jsx":"8","/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/counters/CompletedTasks.jsx":"9","/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/tasks/TaskForm.jsx":"10","/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/tasks/TaskList.jsx":"11","/Users/vascooliveira/code/volivers/react-moma-dashboard/src/index.js":"12"},{"size":1548,"mtime":1610890083594,"results":"13","hashOfConfig":"14"},{"size":2205,"mtime":1610882711392,"results":"15","hashOfConfig":"14"},{"size":1728,"mtime":1610829190913,"results":"16","hashOfConfig":"14"},{"size":3886,"mtime":1610874473713,"results":"17","hashOfConfig":"14"},{"size":2497,"mtime":1610773352133,"results":"18","hashOfConfig":"14"},{"size":1704,"mtime":1610829188347,"results":"19","hashOfConfig":"14"},{"size":787,"mtime":1610847506365,"results":"20","hashOfConfig":"14"},{"size":5328,"mtime":1610847919503,"results":"21","hashOfConfig":"14"},{"size":1713,"mtime":1610829395262,"results":"22","hashOfConfig":"14"},{"size":4933,"mtime":1610891099243,"results":"23","hashOfConfig":"14"},{"size":7114,"mtime":1610890305194,"results":"24","hashOfConfig":"14"},{"size":197,"mtime":1610753026922,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kl8tku",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/vascooliveira/code/volivers/react-moma-dashboard/src/App.jsx",[],"/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/common/Utils.jsx",[],["55","56"],"/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/counters/ImplementedArtworks.jsx",[],"/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/ArtworksTable.jsx",["57","58"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LinkOperator, XGrid } from '@material-ui/x-grid';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: '10px 0',\n  },\n  wrapperArtworks: {\n    height: 350,\n    width: '100%'\n  },\n  wrapperTitle: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  wrapperViews: {\n    display: 'flex',\n    alignItems: 'center',\n    alignSelf: 'flex-end'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst ArtworksTable = ({ artworks }) => {\n  const classes = useStyles();\n\n  const [state, setState] = useState('');\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n\n  // const [filter, setFilter] = useState(\"van\");\n  \n\n  // const handleChange = (event) => {\n  //   // setFilter(e.target.value);\n  //   console.log(event.target.value)\n  // }\n\n  const filterModel = {\n    items: [\n      { columnField: 'artist',\n        operatorValue: 'contains',\n        value: 'van',\n        // onChange: handleChange(event: console.log(event.target.value)) => void\n      },\n      { columnField: 'collection', operatorValue: 'contains', value: 'Modern' },\n    ],\n    linkOperator: LinkOperator.Or,\n  };\n\n  const [views, setViews] = useState(filterModel.items);\n\n  return (\n    <div className={classes.wrapperArtworks}>\n      <div className={classes.wrapperTitle}>\n        <h2><FavoriteIcon /> ArtWorks</h2>\n        <div className={classes.wrapperViews}>\n          <FormControl className={classes.formControl}>\n            <InputLabel htmlFor=\"age-native-simple\">Views</InputLabel>\n            <Select\n              native\n              value={state.age}\n              onChange={handleChange}\n              inputProps={{\n                name: 'priority',\n                id: 'priority-native-simple',\n              }}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value={\"High\"}>High</option>\n              <option value={\"Medium\"}>Medium</option>\n              <option value={\"Low\"}>Low</option>\n            </Select>\n          </FormControl>\n          <Tooltip title=\"Save view\">\n            <Fab color=\"primary\" aria-label=\"save\" size=\"small\" className=\"btn\">\n              <SaveIcon />\n            </Fab>\n          </Tooltip>\n        </div>\n      </div>\n      <XGrid\n        className={classes.root}\n        showToolbar\n        rowHeight={25}\n        headerHeight={40}\n        pageSize={50}\n        pagination\n        columns={[\n          { field: 'id', headerName: '#REF', description: '#REF', hide: true },\n          { field: 'title', headerName: 'Title', description: 'Title', width: 110 },\n          { field: 'artist', headerName: 'Artist', description: 'Artist', width: 130 },\n          { field: 'collection', headerName: 'Collection', description: 'Collection', width: 120 },\n          { field: 'medium', headerName: 'Medium', description: 'Medium', width: 110 },\n          { field: 'dimensions', headerName: 'Dimensions', description: 'Dimensions', width: 130 },\n          { field: 'task_id', headerName: 'Tasks', description: 'Tasks', hide: true },\n          { field: 'status', headerName: 'Status', description: 'Status', width: 110 }\n        ]}\n        rows={artworks}\n        filterModel={filterModel}\n      />\n    </div>\n  );\n}\n\nexport default ArtworksTable;\n","/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/Timeline.jsx",[],"/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/counters/TotalArtworks.jsx",[],["59","60"],"/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/common/Footer.jsx",[],["61","62"],"/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/common/SideDrawer.jsx",[],"/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/counters/CompletedTasks.jsx",[],"/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/tasks/TaskForm.jsx",[],"/Users/vascooliveira/code/volivers/react-moma-dashboard/src/components/tasks/TaskList.jsx",["63","64","65"],"import React, { useState, useEffect } from 'react';\nimport { makeTasks } from '../common/Utils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { format } from 'date-fns';\nimport Alert from '@material-ui/lab/Alert';\nimport TaskForm from './TaskForm';\nimport IconButton from '@material-ui/core/IconButton';\nimport DoneIcon from '@material-ui/icons/Done';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Chip from '@material-ui/core/Chip';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\n\nconst useStyles = makeStyles((theme) => ({\n  error: {\n    backgroundColor: 'rgba(255, 69, 96, 0.85)',\n    margin: '10px 10px',\n    textTransform: 'capitalize',\n    transition: 'transform .3s ease-in',\n    \"&:hover\": {\n      transform: 'scale(1.02)'\n    }\n  },\n  warning: {\n    backgroundColor: 'rgba(254, 176, 25, 0.85)',\n    margin: '10px 10px',\n    textTransform: 'capitalize',\n    transition: 'transform .3s ease-in',\n    \"&:hover\": {\n      transform: 'scale(1.02)'\n    }\n  },\n  info: {\n    backgroundColor: ' rgba(0, 227, 150, 0.85)',\n    margin: '10px 10px',\n    textTransform: 'capitalize',\n    transition: 'transform .3s ease-in',\n    \"&:hover\": {\n      transform: 'scale(1.02)'\n    }\n  },\n  wrapperTitle: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n  },\n  wrapperFiltering: {\n    display: 'flex',\n    alignItems: 'center',\n    alignSelf: 'flex-end'\n  },\n  wrapperBtn: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  btnFav: {\n    margin: '0 10px'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  wrapperList: {\n    maxHeight: '140vh',\n    overflow: 'auto',\n    marginBottom: '80px'\n  }\n}));\n\nconst TaskList = ({ task }) => {\n  const classes = useStyles();\n  const initTasks = makeTasks(13);\n\n\n  const handleFilterChange = (e, filterType) => {\n    switch (filterType) {\n      case \"completed\":\n          setCompletedFilter(e.target.value);\n          break;\n      case \"priority\":\n          setPriorityFilter(e.target.value);\n          break;\n      default: break;\n    }\n  }\n\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    setTasks(initTasks);\n  },[])\n\n  const [completedFilter, setCompletedFilter] = useState(\"\");\n  useEffect(() => {\n    const filtered = initTasks.map(task => ({ ...task, filtered: task.completed.includes(completedFilter) }));\n    setTasks(filtered)\n  }, [completedFilter])\n\n  const [priorityFilter, setPriorityFilter] = useState(\"\");\n  useEffect(() => {\n    const filtered = initTasks.map(task => ({ ...task, filtered: task.priority.includes(priorityFilter) }));\n    setTasks(filtered);\n  }, [priorityFilter])\n\n  const [open, setOpen] = useState(false);\n  const handleOpenModal = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div className=\"tasks-list\">\n      <div className={classes.wrapperBtn}>\n        <Tooltip title=\"Create task\">\n          <Fab color=\"primary\" aria-label=\"add\" size=\"large\" className={classes.btnFav} tasks={tasks} onClick={handleOpenModal}>\n            <AddIcon />\n          </Fab>\n        </Tooltip>\n        <TaskForm open={open} setOpen={setOpen} tasks={tasks} />\n        <Tooltip title=\"Edit task\">\n          <Fab aria-label=\"edit\" size=\"large\" className={classes.btnFav} task={task}>\n            <EditIcon />\n          </Fab>\n        </Tooltip>\n        <Tooltip title=\"Export tasks\">\n          <Fab aria-label=\"export\"  size=\"large\" className={classes.btnFav}>\n            <CloudDownloadIcon />\n          </Fab>\n        </Tooltip>\n      </div>\n      <div className=\"wrapper-tasks\" >\n        <div className={classes.wrapperTitle}>\n          <h2><AssignmentIcon /> Tasks</h2>\n          <div className={classes.wrapperFiltering}>\n            <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"completed-native-simple\">Status</InputLabel>\n                  <Select\n                    native\n                    value={completedFilter}\n                    onChange={(e) => handleFilterChange(e, \"completed\")}\n                    inputProps={{\n                      name: 'completed',\n                      id: 'completed-native-simple',\n                    }}\n                  >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={\"true\"}>Completed</option>\n                <option value={\"false\"}>In progress</option>\n              </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"priority-native-simple\">Priority</InputLabel>\n              <Select\n                native\n                value={priorityFilter}\n                onChange={(e) => handleFilterChange(e, \"priority\")}\n                inputProps={{\n                  name: 'priority',\n                  id: 'priority-native-simple',\n                }}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                <option value={\"High\"}>High</option>\n                <option value={\"Medium\"}>Medium</option>\n                <option value={\"Low\"}>Low</option>\n              </Select>\n            </FormControl>\n          </div>\n        </div>\n        <div className={classes.wrapperList}>  \n          {tasks.map(task => task.filtered === true ? (\n              <div>\n                <Alert\n                  variant=\"filled\"\n                  severity={task.priority === \"High\" ? \"error\" : task.priority === \"Medium\" ? \"warning\" : \"info\"}\n                  className={task.priority === \"High\" ? classes.error : task.priority === \"Medium\" ? classes.warning : classes.info}\n                  key={task.id}\n                  task={task}\n                  action={\n                    <IconButton aria-label=\"done\" size=\"small\" >\n                      <DoneIcon />\n                    </IconButton>\n                  }\n                >\n                  {task.title}\n                  <Chip\n                    size=\"small\"\n                    style={{ marginLeft: '5px', color: '#616161', backgroundColor: 'rgba(255, 255, 255, 0.5)' }}\n                    avatar={<ScheduleIcon />}\n                    label={format(task.date, \"dd/MM\")}\n                  />\n                  <Chip\n                    size=\"small\"\n                    style={{ marginLeft: '5px', color: '#616161', backgroundColor: 'rgba(255, 255, 255, 0.5)' }}\n                    avatar={<AccountCircleIcon />}\n                    label={task.user}\n                  />\n                </Alert>\n              </div>\n          ) : '')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TaskList;","/Users/vascooliveira/code/volivers/react-moma-dashboard/src/index.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":72,"column":10,"nodeType":"72","messageId":"73","endLine":72,"endColumn":15},{"ruleId":"70","severity":1,"message":"74","line":72,"column":17,"nodeType":"72","messageId":"73","endLine":72,"endColumn":25},{"ruleId":"66","replacedBy":"75"},{"ruleId":"68","replacedBy":"76"},{"ruleId":"66","replacedBy":"77"},{"ruleId":"68","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":102,"column":5,"nodeType":"81","endLine":102,"endColumn":7,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"80","line":108,"column":6,"nodeType":"81","endLine":108,"endColumn":23,"suggestions":"83"},{"ruleId":"79","severity":1,"message":"80","line":114,"column":6,"nodeType":"81","endLine":114,"endColumn":22,"suggestions":"84"},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'views' is assigned a value but never used.","Identifier","unusedVar","'setViews' is assigned a value but never used.",["85"],["86"],["85"],["86"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initTasks'. Either include it or remove the dependency array.","ArrayExpression",["87"],["88"],["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [initTasks]",{"range":"96","text":"97"},"Update the dependencies array to be: [completedFilter, initTasks]",{"range":"98","text":"99"},"Update the dependencies array to be: [initTasks, priorityFilter]",{"range":"100","text":"101"},[2713,2715],"[initTasks]",[2939,2956],"[completedFilter, initTasks]",[3177,3193],"[initTasks, priorityFilter]"]